{"version":3,"sources":["components/Balance/Balance.module.css","components/TransactionHistory/TransacyioHistory.module.css","components/Controls/Controls.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.js","index.js"],"names":["module","exports","Controls","state","amount","handleChange","target","name","value","setState","Number","handleSubmit","e","preventDefault","type","notify","props","balance","onTransaction","msg","toast","error","this","className","style","controls","form","onSubmit","input","onChange","button","onClick","Component","Balance","income","expenses","TransactionHistory","items","table","map","el","key","id","date","Dashboard","dataInput","typeName","data","shortid","Date","toLocaleString","prevState","onSumm","typeTrancaction","filter","reduce","acc","summ","savedTransactions","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","wrapper","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ca8cceb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__3aQgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransacyioHistory_table__3m6ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2n5M5\",\"form\":\"Controls_form__WYfmH\",\"input\":\"Controls_input__hg-yR\",\"button\":\"Controls_button__1y7aQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dashboard_wrapper__R5TbA\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport style from './Controls.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onTransaction: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: Number(value),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const type = e.target.name;\n    if (this.state.amount <= 0) {\n      this.notify('Введите сумму для проведения операции!');\n      return;\n    }\n    if (\n      e.target.name === 'Withdraw' &&\n      this.props.balance < this.state.amount\n    ) {\n      this.notify('На счету недостаточно средств для проведения операции! ');\n      return;\n    }\n    this.props.onTransaction({ ...this.state }, type);\n    this.setState({\n      amount: '',\n    });\n  };\n\n  notify = msg => {\n    toast.error(msg);\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={style.controls}>\n        <form className={style.form} onSubmit={this.handleSubmit}>\n          <input\n            className={style.input}\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n          <button\n            className={style.button}\n            type=\"button\"\n            name=\"Deposit\"\n            onClick={this.handleSubmit}\n          >\n            Deposit\n          </button>\n          <button\n            className={style.button}\n            type=\"button\"\n            name=\"Withdraw\"\n            onClick={this.handleSubmit}\n          >\n            Withdraw\n          </button>\n        </form>\n        <ToastContainer />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ income, expenses, balance }) => (\n  <section className={style.balance}>\n    <span>Income: {income}$</span>\n    <span>Expenses: {expenses}$</span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransacyioHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={style.table}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(el => (\n        <tr key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount} $</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport style from './Dashboard.module.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    items: [],\n  };\n\n  componentDidMount() {\n    const savedTransactions = localStorage.getItem('savedTransactions');\n    if (savedTransactions) {\n      this.setState({\n        items: JSON.parse(savedTransactions),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { items } = this.state;\n    if (prevState.items !== items) {\n      localStorage.setItem('savedTransactions', JSON.stringify(items));\n    }\n  }\n\n  onTransaction = (dataInput, typeName) => {\n    const data = {\n      ...dataInput,\n      id: shortid(),\n      date: new Date().toLocaleString(),\n      type: typeName,\n    };\n    this.setState(prevState => ({\n      items: [...prevState.items, data],\n    }));\n  };\n\n  onSumm = (items, typeTrancaction) => {\n    return items\n      .filter(el => el.type === typeTrancaction)\n      .reduce((acc, el) => {\n        let summ = acc;\n        summ += el.amount;\n        return summ;\n      }, 0);\n  };\n\n  render() {\n    const { items } = this.state;\n    const income = this.onSumm(items, 'Deposit');\n    const expenses = this.onSumm(items, 'Withdraw');\n    const balance = income - expenses;\n    return (\n      <div className={style.wrapper}>\n        <Controls onTransaction={this.onTransaction} balance={balance} />\n        <Balance income={income} expenses={expenses} balance={balance} />\n        {!!items.length && <TransactionHistory items={items} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n// import './normalize.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}